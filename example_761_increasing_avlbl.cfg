# ::::::::::::::::::::::::::::::::::::::::::::::::::::::
# :: Kademlia Default Configuration
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::

# ::::: GLOBAL ::::::

# Network size
SIZE 1000

# Random seed
K 5

MINDELAY  100
MAXDELAY  100

SIM_TIME 1000*60*60

TRAFFIC_STEP  (SIM_TIME)/SIZE #10000000/SIZE
OBSERVER_STEP 100000
TURBULENCE_STEP  (SIM_TIME*20)/SIZE   #100000000/SIZE

STORE_STEP   (SIM_TIME)/SIZE*30
FINDVALUE_STEP 500 #(SIM_TIME)/SIZE*100

# ::::: network :::::
random.seed 24680

simulation.experiments 1
# simulate the total number of time units
simulation.endtime SIM_TIME


network.size SIZE


# ::::: LAYERS :::::
protocol.0link peersim.core.IdleProtocol

protocol.1uniftr peersim.transport.UniformRandomTransport
protocol.1uniftr.mindelay MINDELAY
protocol.1uniftr.maxdelay MAXDELAY

protocol.2unreltr peersim.transport.UnreliableTransport
protocol.2unreltr.drop 0
protocol.2unreltr.transport 1uniftr

protocol.3kademlia peersim.KademliaProtocol
protocol.3kademlia.transport 2unreltr
#protocol.3kademlia.BITS 32
#protocol.3kademlia.K 5


# ::::: INITIALIZERS :::::
init.0randlink peersim.dynamics.WireKOut
init.0randlink.k K
init.0randlink.protocol 0link

# Allocate a random nodeId for each node
init.1uniqueNodeID peersim.CustomDistribution
init.1uniqueNodeID.protocol 3kademlia

# Fill in the initial node k-buckets, 50 random IDs and 50 neighbor IDs
init.2statebuilder peersim.StateBuilder
init.2statebuilder.protocol 3kademlia
init.2statebuilder.transport 2unreltr

# distribute all of the messages in the dataset
# in future make distribution step in the init
# init.3distributer peersim.KadDistributer
# init.3distributer.protocol 3kademlia


# ::::: CONTROLS :::::

# traffic generator
control.0traffic peersim.TrafficGenerator
control.0traffic.protocol 3kademlia
control.0traffic.step TRAFFIC_STEP

# turbolence
control.2turbolenceAdd peersim.Turbulence
control.2turbolenceAdd.protocol 3kademlia
control.2turbolenceAdd.transport 2unreltr
control.2turbolenceAdd.step TURBULENCE_STEP
control.2turbolenceAdd.p_idle 1
control.2turbolenceAdd.p_rem 0
control.2turbolenceAdd.p_add 0

#store msg generator
control.4store StoreMessageGenerator
control.4store.protocol 3kademlia
control.4store.step STORE_STEP

#find value msg generator
control.5findvalue FindValueMessageGenerator
control.5findvalue.protocol 3kademlia
control.5findvalue.step FINDVALUE_STEP

# ::::: OBSERVER :::::
control.3 peersim.KademliaObserver
control.3.protocol 3kademlia
control.3.step OBSERVER_STEP

